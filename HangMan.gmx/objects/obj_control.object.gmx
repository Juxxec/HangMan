<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_control</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Create a message queue
global.g_MessageQueue = ds_list_create();

// Create the hud
global.g_HUDInstance = instance_create(0, 0, obj_hud);

// State information
global.g_StateInfo[STATE_MAINMENU, 0] = scr_MainMenu_Create;
global.g_StateInfo[STATE_MAINMENU, 1] = scr_MainMenu_Destroy;
global.g_StateInfo[STATE_GAME, 0] = scr_Game_Create;
global.g_StateInfo[STATE_GAME, 1] = scr_Game_Destroy;

// The current game state
global.g_State = STATE_MAINMENU;

// Initialise the current state
script_execute(global.g_StateInfo[global.g_State, 0]);

// The current word being guessed
global.g_Word = "";

// Has the game been paused (when a menu has appeard for example)
global.g_Pause = false;

with (instance_create(global.g_FrameWidth / 2, global.g_FrameHeight / 2, obj_categorySelect))
{
    ds_list_add(m_TextList, "Animals");
    ds_list_add(m_TextList, "Architecture");
    ds_list_add(m_TextList, "Math");
    ds_list_add(m_TextList, "Science");
    ds_list_add(m_TextList, "Computers");
    ds_list_add(m_TextList, "Facebook");
    
    m_Font = fnt_categories;
    m_FontColor = c_white;
    m_Border = 3;
    m_BorderColor = c_white;
    m_Color1 = make_color_rgb(233, 165, 83);
    m_Color2 = make_color_rgb(223, 123, 2);
    m_Width = 200;
    m_Height = 32;
    m_Text = "Select Category:";
    m_TextFontColor = c_black;
    m_TextFont = fnt_menu;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Process message
for (var i = 0; i &lt; ds_list_size(global.g_MessageQueue); i += 1)
{
    var msg = ds_list_find_value(global.g_MessageQueue, i);
    var type = ds_map_find_value(msg, "type");
    var data = ds_map_find_value(msg, "data");
    
    switch (type)
    {
        case MSG_PRESSED:
        {
            switch (data)
            {
                // Button New Game from Main Menu
                case 10000:
                {
                    scr_ChangeState(STATE_GAME);
                    break;
                }
                
                // Button Exit Game from Main Menu
                case 10003:
                {
                    if (show_question("Are you sure you want to exit?"))
                        game_end();
                        
                    break;
                }
            }
            
            break;
        }
    }
    
    ds_map_destroy(msg);
}
ds_list_clear(global.g_MessageQueue);  
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_letter</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_drawable</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

m_Letter = "";
m_Font = -1;
m_FontColor = c_white;
m_Id = -1;
m_Pressed = false;
m_Highlight = -1;
m_Size = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>m_Pressed = false;

if (mouse_check_button(mb_left))
{
    if (mouse_x &gt;= (x - m_Size / 2) * global.g_ScaleX &amp;&amp; 
        mouse_x &lt;= (x + m_Size / 2) * global.g_ScaleX &amp;&amp;
        mouse_y &gt;= (y - m_Size / 2) * global.g_ScaleY &amp;&amp;
        mouse_y &lt;= (y + m_Size / 2) * global.g_ScaleY)
    {
        m_Pressed = true;
    }
}

if (mouse_check_button_released(mb_left))
{
    if (mouse_x &gt;= (x - m_Size / 2) * global.g_ScaleX &amp;&amp; 
        mouse_x &lt;= (x + m_Size / 2) * global.g_ScaleX &amp;&amp;
        mouse_y &gt;= (y - m_Size / 2) * global.g_ScaleY &amp;&amp;
        mouse_y &lt;= (y + m_Size / 2) * global.g_ScaleY)
    {
        if (string_count(string_upper(m_Letter), string_upper(global.g_Word)) &gt; 0)
            global.g_UncoveredLetters += string(m_Letter);
        else
            global.g_GuessesRemaining --;
            
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (m_Pressed)
{
    draw_sprite(m_Highlight, -1, x, y);
}

draw_set_color(m_FontColor);
draw_set_font(m_Font);
draw_text(x - string_width(m_Letter) / 2,
          y - string_height(m_Letter) / 2, 
          m_Letter);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
